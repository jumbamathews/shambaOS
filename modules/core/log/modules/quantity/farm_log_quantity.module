<?php

/**
 * @file
 * Contains farm_log_quantity.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_base_field_info().
 */
function farm_log_quantity_entity_base_field_info(EntityTypeInterface $entity_type) {

  // We only care about log entities.
  if ($entity_type->id() != 'log') {
    return [];
  }

  // Add a quantity reference field to logs.
  $field_info = [
    'quantity' => [
      'type' => 'entity_reference_revisions',
      'label' => t('Quantity'),
      'description' => t('Add quantity measurements to this log.'),
      'target_type' => 'quantity',
      'multiple' => TRUE,
      'weight' => [
        'form' => 0,
        'view' => 0,
      ],
    ],
  ];
  $fields = [];
  foreach ($field_info as $name => $info) {
    $fields[$name] = \Drupal::service('farm_field.factory')->baseFieldDefinition($info);
  }
  return $fields;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function farm_log_quantity_form_log_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Alter the Quantity inline entity form to set the default quantity type.
  if (!empty($form['quantity']['widget']['actions']['bundle']['#options'])) {
    $bundle_select = &$form['quantity']['widget']['actions']['bundle'];

    // Load the log type storage.
    /** @var \Drupal\log\Entity\Log $entity */
    $entity = $form_state->getFormObject()->getEntity();
    /** @var \Drupal\log\Entity\LogType $log_type_storage */
    $log_type_storage = \Drupal::service('entity_type.manager')->getStorage('log_type')->load($entity->bundle());

    // Load default quantity type from the bundle's third party settings.
    // Default to standard, if it exists. Note that we do NOT add a dependency
    // on farm_quantity_standard, because that would create a circular
    // dependency. This only changes the default type to 'standard' if that
    // option is available.
    $default_type = $log_type_storage->getThirdPartySetting('farm_log_quantity', 'default_quantity_type');
    if (empty($default_type)) {
      $default_type = 'standard';
    }

    // Set the default value.
    if (array_key_exists($default_type, $bundle_select['#options'])) {
      $bundle_select['#default_value'] = $default_type;
    }
  }
}
